<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etc.model.dao.FlightInfoMapper" >
  <resultMap id="BaseResultMap" type="com.etc.model.entity.FlightInfo" >
    <id column="fid" property="fid" jdbcType="INTEGER" />
    <result column="fno" property="fno" jdbcType="VARCHAR" />
    <result column="departure" property="departure" jdbcType="VARCHAR" />
    <result column="arrival" property="arrival" jdbcType="VARCHAR" />
    <result column="ptype" property="ptype" jdbcType="VARCHAR" />
    <result column="sta" property="sta" jdbcType="VARCHAR" />
    <result column="std" property="std" jdbcType="VARCHAR" />
    <result column="ata" property="ata" jdbcType="VARCHAR" />
    <result column="atd" property="atd" jdbcType="VARCHAR" />
    <result column="atype" property="atype" jdbcType="VARCHAR" />
    <result column="airport" property="airport" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="VARCHAR" />
    <result column="lon" property="lon" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fid, fno, departure, arrival, ptype, sta, std, ata, atd, atype, airport, lat, lon
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.etc.model.entity.FlightInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from flight_info
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from flight_info
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.etc.model.entity.FlightInfoExample" >
    delete from flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.etc.model.entity.FlightInfo" >
    insert into flight_info (fid, fno, departure, 
      arrival, ptype, sta, 
      std, ata, atd, atype, 
      airport, lat, lon)
    values (#{fid,jdbcType=INTEGER}, #{fno,jdbcType=VARCHAR}, #{departure,jdbcType=VARCHAR}, 
      #{arrival,jdbcType=VARCHAR}, #{ptype,jdbcType=VARCHAR}, #{sta,jdbcType=VARCHAR}, 
      #{std,jdbcType=VARCHAR}, #{ata,jdbcType=VARCHAR}, #{atd,jdbcType=VARCHAR}, #{atype,jdbcType=VARCHAR}, 
      #{airport,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{lon,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.etc.model.entity.FlightInfo" >
    insert into flight_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fid,
      </if>
      <if test="fno != null" >
        fno,
      </if>
      <if test="departure != null" >
        departure,
      </if>
      <if test="arrival != null" >
        arrival,
      </if>
      <if test="ptype != null" >
        ptype,
      </if>
      <if test="sta != null" >
        sta,
      </if>
      <if test="std != null" >
        std,
      </if>
      <if test="ata != null" >
        ata,
      </if>
      <if test="atd != null" >
        atd,
      </if>
      <if test="atype != null" >
        atype,
      </if>
      <if test="airport != null" >
        airport,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="lon != null" >
        lon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="fno != null" >
        #{fno,jdbcType=VARCHAR},
      </if>
      <if test="departure != null" >
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="arrival != null" >
        #{arrival,jdbcType=VARCHAR},
      </if>
      <if test="ptype != null" >
        #{ptype,jdbcType=VARCHAR},
      </if>
      <if test="sta != null" >
        #{sta,jdbcType=VARCHAR},
      </if>
      <if test="std != null" >
        #{std,jdbcType=VARCHAR},
      </if>
      <if test="ata != null" >
        #{ata,jdbcType=VARCHAR},
      </if>
      <if test="atd != null" >
        #{atd,jdbcType=VARCHAR},
      </if>
      <if test="atype != null" >
        #{atype,jdbcType=VARCHAR},
      </if>
      <if test="airport != null" >
        #{airport,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        #{lon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.etc.model.entity.FlightInfoExample" resultType="java.lang.Integer" >
    select count(*) from flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update flight_info
    <set >
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.fno != null" >
        fno = #{record.fno,jdbcType=VARCHAR},
      </if>
      <if test="record.departure != null" >
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.arrival != null" >
        arrival = #{record.arrival,jdbcType=VARCHAR},
      </if>
      <if test="record.ptype != null" >
        ptype = #{record.ptype,jdbcType=VARCHAR},
      </if>
      <if test="record.sta != null" >
        sta = #{record.sta,jdbcType=VARCHAR},
      </if>
      <if test="record.std != null" >
        std = #{record.std,jdbcType=VARCHAR},
      </if>
      <if test="record.ata != null" >
        ata = #{record.ata,jdbcType=VARCHAR},
      </if>
      <if test="record.atd != null" >
        atd = #{record.atd,jdbcType=VARCHAR},
      </if>
      <if test="record.atype != null" >
        atype = #{record.atype,jdbcType=VARCHAR},
      </if>
      <if test="record.airport != null" >
        airport = #{record.airport,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.lon != null" >
        lon = #{record.lon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update flight_info
    set fid = #{record.fid,jdbcType=INTEGER},
      fno = #{record.fno,jdbcType=VARCHAR},
      departure = #{record.departure,jdbcType=VARCHAR},
      arrival = #{record.arrival,jdbcType=VARCHAR},
      ptype = #{record.ptype,jdbcType=VARCHAR},
      sta = #{record.sta,jdbcType=VARCHAR},
      std = #{record.std,jdbcType=VARCHAR},
      ata = #{record.ata,jdbcType=VARCHAR},
      atd = #{record.atd,jdbcType=VARCHAR},
      atype = #{record.atype,jdbcType=VARCHAR},
      airport = #{record.airport,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      lon = #{record.lon,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.etc.model.entity.FlightInfo" >
    update flight_info
    <set >
      <if test="fno != null" >
        fno = #{fno,jdbcType=VARCHAR},
      </if>
      <if test="departure != null" >
        departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="arrival != null" >
        arrival = #{arrival,jdbcType=VARCHAR},
      </if>
      <if test="ptype != null" >
        ptype = #{ptype,jdbcType=VARCHAR},
      </if>
      <if test="sta != null" >
        sta = #{sta,jdbcType=VARCHAR},
      </if>
      <if test="std != null" >
        std = #{std,jdbcType=VARCHAR},
      </if>
      <if test="ata != null" >
        ata = #{ata,jdbcType=VARCHAR},
      </if>
      <if test="atd != null" >
        atd = #{atd,jdbcType=VARCHAR},
      </if>
      <if test="atype != null" >
        atype = #{atype,jdbcType=VARCHAR},
      </if>
      <if test="airport != null" >
        airport = #{airport,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="lon != null" >
        lon = #{lon,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etc.model.entity.FlightInfo" >
    update flight_info
    set fno = #{fno,jdbcType=VARCHAR},
      departure = #{departure,jdbcType=VARCHAR},
      arrival = #{arrival,jdbcType=VARCHAR},
      ptype = #{ptype,jdbcType=VARCHAR},
      sta = #{sta,jdbcType=VARCHAR},
      std = #{std,jdbcType=VARCHAR},
      ata = #{ata,jdbcType=VARCHAR},
      atd = #{atd,jdbcType=VARCHAR},
      atype = #{atype,jdbcType=VARCHAR},
      airport = #{airport,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      lon = #{lon,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
</mapper>